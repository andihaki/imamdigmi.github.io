<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on JournalToday</title>
    <link>https://imamdigmi.github.io/post/</link>
    <description>Recent content in Posts on JournalToday</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>imamdigmi</copyright>
    <lastBuildDate>Wed, 21 Feb 2018 05:39:09 +0000</lastBuildDate>
    
	<atom:link href="https://imamdigmi.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google Colab Gratis Untuk Belajar Deep Learning</title>
      <link>https://imamdigmi.github.io/post/google-colab-gratis-untuk-belajar-deep-learning/</link>
      <pubDate>Wed, 21 Feb 2018 05:39:09 +0000</pubDate>
      
      <guid>https://imamdigmi.github.io/post/google-colab-gratis-untuk-belajar-deep-learning/</guid>
      <description>Google Colaboratory atau disebut juga Colab adalah tools baru yang dikeluarkan oleh Google Internal Research yang dibuat untuk membantu para Researcher dalam mengolah data untuk keperluan belajar Machine Learning, tools ini secara penggunaan mirip seperti Jupyter Notebook dan dibuat diatas envirounment Jupyter yang tidak memerlukan pengaturan atau setup terlebih dahulu untuk digunakan dan berjalan sepenuhnya pada Cloud dengan memanfaatkan media penyimpanan Google Drive. Yang menjadi menarik perhatian adalah tools Colab ini menyediakan GPU gratis kepada penggunanya sebagai backend komputasi dan dapat digunakan selama 12 jam pada suatu waktu, menarik bukan?</description>
    </item>
    
    <item>
      <title>Setup NVIDIA di Arch Linux</title>
      <link>https://imamdigmi.github.io/post/nvidia-setup-archlinux/</link>
      <pubDate>Sat, 03 Feb 2018 06:30:26 +0000</pubDate>
      
      <guid>https://imamdigmi.github.io/post/nvidia-setup-archlinux/</guid>
      <description>Memeriksa hardware Cek driver hardware komputer
$ lspci -k | grep -A 2 -E &amp;quot;(VGA|3D)&amp;quot;  Outputnya kurang lebih akan seperti ini
00:02.0 VGA compatible controller: Intel Corporation 4th Gen Core Processor Integrated Graphics Controller (rev 06) Subsystem: Dell 4th Gen Core Processor Integrated Graphics Controller Kernel driver in use: i915 -- 02:00.0 3D controller: NVIDIA Corporation GK107GLM [Quadro K1100M] (rev a1) Subsystem: Dell GK107GLM [Quadro K1100M] Kernel driver in use: nvidia  Instalasi Driver Install NVIDIA driver</description>
    </item>
    
    <item>
      <title>Post-Installation Arch Linux</title>
      <link>https://imamdigmi.github.io/post/post-installation-archlinux/</link>
      <pubDate>Thu, 01 Feb 2018 16:36:07 +0000</pubDate>
      
      <guid>https://imamdigmi.github.io/post/post-installation-archlinux/</guid>
      <description>Disable Beep Sound (PC speaker) PC speaker dapat di-disabled dengan cara meng-unload pcspkr kernel module
sudo rmmod pcspkr  Blacklist module pcspkr akan mencegah udev pada saat booting sistem
echo &amp;quot;blacklist pcspkr&amp;quot; &amp;gt; /etc/modprobe.d/nobeep.conf  Selengkapnya bisa dibaca di dokumentasi resminya disini
File Manager Support Flashdisk dan Device Android tidak terbaca dan ekstrak file tidak bisa di thunar
$ sudo pacman -S gvfs file-roller libmtp gvfs-mtp gvfs-gphoto2  Selengkapnya bisa dibaca di dokumentasi resminya disini</description>
    </item>
    
    <item>
      <title>Memahami Epoch Batch Size Dan Iteration</title>
      <link>https://imamdigmi.github.io/post/memahami-epoch-batch-size-dan-iteration/</link>
      <pubDate>Thu, 25 Jan 2018 22:53:14 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/memahami-epoch-batch-size-dan-iteration/</guid>
      <description>Jika anda adalah seseorang yang sedang menggeluti bidang Machine Learning atau Deep Learning pasti sangat familiar dengan ketiga hal ini, namun mungkin juga anda sering bingung sampai menggaruk-garuk kepala anda dan bertanya-tanya &amp;ldquo;Mengapa saya mengetik ketiga istilah ini dalam kode saya dan apa bedanya? fungsinya apa?&amp;rdquo; karena semuanya terlihat sangat mirip.
Baiklah mari kita bahas, tapi untuk mengetahui perbedaan antara ketiga hal ini kita perlu mengetahui beberapa istilah pada Machine Learning seperti Gradient Descent agar kita lebih memahami fungsi dari Epoch, Batch Size, dan Iterations.</description>
    </item>
    
    <item>
      <title>TensorFlow - Custom Object Detection API</title>
      <link>https://imamdigmi.github.io/post/tensorflow-custom-object-detection/</link>
      <pubDate>Thu, 25 Jan 2018 22:51:05 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/tensorflow-custom-object-detection/</guid>
      <description>Tutorial ini adalah lanjutan dari tutorial TensorFlow - Object Detection API yang membahas tentang penggunaan API untuk deteksi objek menggunakan TensorFlow, pada tutorial sebelumnya terdapat permasalahan yaitu objek yang dikenali hanya objek umum saja dan model yang kita gunakan adalah model yang sudah di-training oleh seseorang yang kita tidak tahu bagaimana prosesnya, maka pada tutorial ini menjawab pertanyaan pada tutorial sebelumnya yaitu &amp;ldquo;Bagaimana jika kita ingin mendeteksi objek khusus yang kita tentukan sendiri?</description>
    </item>
    
    <item>
      <title>TensorFlow - Object Detection API</title>
      <link>https://imamdigmi.github.io/post/tensorflow-object-detection-overview/</link>
      <pubDate>Thu, 25 Jan 2018 15:51:05 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/tensorflow-object-detection-overview/</guid>
      <description>Setup TensorFlow Model Untuk menggunakan TensorFlow Object Detection API harus sudah terinstal package TensorFlow, jika belum baca artikel saya tentang Instalasi TensorFlow.
Pertama-tama kita perlu menginstal dependencies yang dibutuhkan, salah satunya adalah ProtoBuf dan dependency lainnya
$ sudo sudo pacman -S protobuf $ pip install --user pillow lxml jupyter matplotlib  Kemudian kita perlu mendownload TensorFlow Models disini jika download sudah selesai ekstrak file .zip lalu masuk ke direktori models/research</description>
    </item>
    
    <item>
      <title>Instalasi Tensorflow</title>
      <link>https://imamdigmi.github.io/post/tensorflow-installation/</link>
      <pubDate>Wed, 24 Jan 2018 16:30:15 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/tensorflow-installation/</guid>
      <description>Dependencies Instal dependency untuk Python
$ sudo pacman -S python-numpy python-dev python-pip python-wheel  Untuk instalasi TensorFlow dengan GPU anda harus menginstal NVIDIA terlebih dahulu, cara instalasinya saya sudah tuliskan disini
Buat LD_LIBRARY_PATH variable
$ export LD_LIBRARY_PATH=/opt/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}   Note: Sesuaikan lokasi instalasi CUDA
 Instalasi Package Wheel CPU $ pip install --upgrade tensorflow # for Python 2.7 $ pip3 install --upgrade tensorflow # for Python 3.n  GPU $ pip install --upgrade tensorflow-gpu # for Python 2.</description>
    </item>
    
    <item>
      <title>Xfce4 dengan Windowck dan Maximus</title>
      <link>https://imamdigmi.github.io/post/xfce4-dengan-windowck-dan-maximus/</link>
      <pubDate>Sat, 29 Apr 2017 18:56:51 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/xfce4-dengan-windowck-dan-maximus/</guid>
      <description>Pada pembahasan ini kita akan mendekorasi tampilan XFCE4 dan memaksimalkan ruang layar komputer agar lebih fit mirip seperti Unity pada Desktop Ubuntu, untuk itu kita perlu memasang 3 plugin utama yaitu :
 Windowck - Untuk menampilkan tombol button pada panel Maximus - Untuk menghilangkan border window AppMenu - Untuk menampilkan window menu pada panel  Setup Windowck Windowck adalah plugin untuk XFCE yang berfungsi untuk menempatkan button window (close, maximize, minimize) pada saat window di-maximize, mirip seperti default desktop envirounment ubuntu yaitu unity.</description>
    </item>
    
    <item>
      <title>Pemutar musik dengan MPD dan NCMPCPP</title>
      <link>https://imamdigmi.github.io/post/pemutar-musik-dengan-ncmpcpp/</link>
      <pubDate>Fri, 28 Apr 2017 22:32:20 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/pemutar-musik-dengan-ncmpcpp/</guid>
      <description>&lt;p&gt;MPD atau Music Player Daemon ini adalah sebuah server daemon yang gunanya untuk memutar music dan NCMPCPP adalah client atau sebuah aplikasi yang digunakan untuk manajemen file musik dan sebagainya, dan kelebihan dari tool ini dapat mengkonfigurasi nya sesuai dengan yang kita inginkan seperti tampilan menu, daftar lagu, visualizer dan sebagainya.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalasi Arch Linux</title>
      <link>https://imamdigmi.github.io/post/instalasi-arch-linux/</link>
      <pubDate>Sat, 01 Apr 2017 19:57:42 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/instalasi-arch-linux/</guid>
      <description>Mungkin bagi sebagian orang yang berkecimpung didunia linux pasti sudah tau salah satu distribusi linux yang satu ini, Archlinux memang menjadi salah satu distribusi linux yang banyak disukai oleh orang-orang karena kemudahannya dalam kustomisasi, karena distribusi linux ini dibangun form scratch yang artinya Archlinux dibangun mulai dari awal dan tanpa mengadopsi atau turunan distribusi apapun ini berbeda dengan ubuntu yang dibangun dari distribusi debian atau fedora yang dibangun dari distribusi linux red hat, biasanya yang menggunakan archlinux ini salah satu orang yang bertipe anti-mainstream namun ada juga yang tidak menyukai Archlinux karena susah digunakan dan tidak direkomendasikan bagi orang yang baru menggunakan linux.</description>
    </item>
    
    <item>
      <title>Belajar Rust - Memahami Stact Dan Heap</title>
      <link>https://imamdigmi.github.io/post/belajar-rust-memahami-stact-dan-heap/</link>
      <pubDate>Fri, 17 Mar 2017 22:41:07 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/belajar-rust-memahami-stact-dan-heap/</guid>
      <description>Jika anda adalah seorang programmer yang berkecimpung di low-level atau systems programming pastinya sudah tidak asing lagi dengan konsep ini dan tentunya sangatlah mengerti tentang pentingnya mengelola resource atau sumber daya memori. Dalam kompilasi sebuah program diciptakan dengan sebuah struktur. Mungkin secara spesifik struktur untuk masing-masing operating system berbeda tapi secara garis besar memiliki beberapa persamaan yaitu pengalamatan memori.
Pada saat program berjalan (runnig), sebuah program akan menempati lokasi tertentu pada memori.</description>
    </item>
    
    <item>
      <title>Belajar Rust - Variable</title>
      <link>https://imamdigmi.github.io/post/belajar-rust-variable/</link>
      <pubDate>Mon, 27 Feb 2017 11:23:08 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/belajar-rust-variable/</guid>
      <description>Pada artikel sebelumnya kita membahas tentang 3 Konsep Dasar yaitu Lifetimes dan pada kali ini kita akan membahas tentang penulisan Variable atau yang disebut juga Binding.
Desain utama dari Rust Programming language adalah fast, efficient and memory safe system. Ini adalah desain yang sudah dijadikan standard modern programming language untuk kedepanya sama seperti yang diterapkan dalam Go Programming Language atau golang.
Pembahasan pada artikel kali ini adalah sebagai berikut :</description>
    </item>
    
    <item>
      <title>Belajar Rust - Lifetimes</title>
      <link>https://imamdigmi.github.io/post/belajar-rust-lifetimes/</link>
      <pubDate>Sun, 26 Feb 2017 20:09:23 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/belajar-rust-lifetimes/</guid>
      <description>Sebelumnya kita membahas tentang konsep dasar kedua dari Rust yaitu References dan Borrowing, pada artikel ini kita masih membahas tentang konsep dasar Rust yaitu Lifetimes. Ketika kita sudah selesai berinteraksi dengan object maka proses untuk dis-alokasi memory akan dilakukan secara otomatis. Sehingga kita tidak perlu secara manual untuk membersihkan memory yang sudah digunakan.
Pada unmanaged code seperti C++ cukup sulit untuk membuat sebuah program yang benar dan terbebas dari bug, sehingga seringkali menimbulkan celah yang bisa dicompromise.</description>
    </item>
    
    <item>
      <title>Belajar Rust - References Dan Borrowing</title>
      <link>https://imamdigmi.github.io/post/belajar-rust-references-dan-borrowing/</link>
      <pubDate>Sun, 26 Feb 2017 17:23:01 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/belajar-rust-references-dan-borrowing/</guid>
      <description>Sebelumnya kita membahas tentang konsep dasar dari Rust yaitu Ownership, kita masih dalam konsep dasar dan kali ini kita akan membahas tentang konsep dasar selanjutnya yaitu References dan Borrowing.
Rust adalah bahasa dengan safety code dimana object diatur oleh bahasa pemograman tersebut dari awal hingga akhir. Developer tidak perlu lagi melakukan pointer arithmatic dan manajemen memory seperti yang kita lakukan dalam bahasa C dan C++.
Oke Let&amp;rsquo;s learn about Borrowing.</description>
    </item>
    
    <item>
      <title>Belajar Rust - Ownership</title>
      <link>https://imamdigmi.github.io/post/belajar-rust-ownership/</link>
      <pubDate>Sun, 26 Feb 2017 14:10:24 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/belajar-rust-ownership/</guid>
      <description>Sebelumnya kita membahas tentang setup rust kali ini kita akan membahas tentang konsep dasar dari bahasa pemrograman Rust, pembahasan yang akan kita bahas meliputi :
 Ownership Borrowing Lifetimes  Ketiga pembahasan diatas adalah &amp;ldquo;The most of distinct and compelling features in Rust&amp;rdquo; artinya ketiga hal tersebut adalah hal paling mendasar dan penting untuk mulai mempelajari bahasa Rust, karena ketiga pembahasan tersebut cukup panjang maka dibagi menjadi 3 artikel dan untuk artikel ini kita hanya akan membahas tentang ownership.</description>
    </item>
    
    <item>
      <title>Belajar Rust - Setup</title>
      <link>https://imamdigmi.github.io/post/belajar-rust-setup/</link>
      <pubDate>Sun, 26 Feb 2017 12:16:03 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/belajar-rust-setup/</guid>
      <description>Rust adalah bahasa pemrograman yang terbilang baru yang pembuatannya dimulai pada tahun 2006 oleh developer Mozilla. Rust adalah bahasa pemrograman sistem (system programming) yang difokuskan pada tiga tujuan: keamanan, kecepatan, dan concurrency. Ia memelihara tujuan ini tanpa garbage collector yang membuatnya menjadi bahasa yang berguna untuk sejumlah kasus penggunaan bahasa lain. Tidak hanya itu rust juga bahasa dengan general purpose language, bahasa low level yang bisa membantu kita untuk mengeksplorasi potensi sisi system, embedded system, dan hal-hal kritis terkait performance.</description>
    </item>
    
    <item>
      <title>Redshift Eye Protection</title>
      <link>https://imamdigmi.github.io/post/redshift-eye-protection/</link>
      <pubDate>Tue, 24 Jan 2017 18:29:57 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/redshift-eye-protection/</guid>
      <description>Aplikasi RedShift ini berfungsi untuk meredamkan layar monitor agar tidak terlalu kontras, sehingga mata kita tidak cepat sakit ketika menatap layar monitor terlalu lama, oke langsung saja kita install.
Ubuntu sudo apt-get install redshift  Archlinux sudo pacman -S redshift  Start Redshift Untuk menjalankan RedShift secara default perintahnya redshift -l LAT:LON -t DAY:NIGHT [OPTIONS...] contoh :
redshift -l -7.797068:110.370529 -t 5700:3600  File Konfigurasi Kita juga bisa menambahkan configuration file untuk redshift, namun kita perlu membuat konfigurasinya secara manual di ~/.</description>
    </item>
    
    <item>
      <title>Websocket Dengan Golang</title>
      <link>https://imamdigmi.github.io/post/websocket-dengan-golang/</link>
      <pubDate>Sat, 21 Jan 2017 18:25:27 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/websocket-dengan-golang/</guid>
      <description>&lt;p&gt;WebSocket merupakan sebuah protokol komunikasi dua arah yang dapat digunakan oleh browser. Jika pada AJAX kita hanya dapat melakukan komunikasi satu arah dengan mengirimkan request kepada server dan menunggu balasannya, maka menggunakan WebSocket kita tidak hanya dapat mengirimkan request kepada server, tetapi juga menerima data dari server tanpa harus mengirimkan request terlebih dahulu. Hal ini berarti ketika menggunakan WebSocket pengguna harus terus menerus terkoneksi dengan server, dan kita memerlukan sebuah server khusus untuk dapat menjalankan aplikasi WebSocket dengan benar.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Layout Keyboard di Ubuntu (Qwerty-Dvorak)</title>
      <link>https://imamdigmi.github.io/post/layout-keyboard-dvorak-di-ubuntu/</link>
      <pubDate>Sat, 21 Jan 2017 18:17:52 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/layout-keyboard-dvorak-di-ubuntu/</guid>
      <description>Sudah tau apa itu Dvorak? Dvorak adalah sebuah tata letak papan ketik yang dipatenkan tahun 1936 oleh August Dvorak (seorang profesor dan psikolog pendidik di University of Washington di Seattle) dan William Dealey. Wikipedia
Untu lebih jelasnya bisa baca disini untuk lebih dalam mengetahui bagaimana layout Dvorak sangatlah berguna bagi jari-jemari kita, dan para programmer handal juga biasanya menggunakan layout keyboard ini untuk membuat penulisan kode semakin produktif, coba baca disini untuk lebih jelasnya.</description>
    </item>
    
    <item>
      <title>Instalasi Golang</title>
      <link>https://imamdigmi.github.io/post/instalasi-golang/</link>
      <pubDate>Sun, 15 Jan 2017 17:47:17 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/instalasi-golang/</guid>
      <description>Pada artikel kali ini kita akan membahas cara meng-install golang (Google Go Language) di Linux, disini Linux yang penulis gunakan adalah :
No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 16.10 Release: 16.10 Codename: yakkety  Download Golang Sebelum kita meng-install golang kita harus mendownload aplikasi golang terlebih dahulu disini lalu klik pada bagian Linux dan jangan lupa pilih jenis bit komputer anda.
 Note: Pada artikel ini ditulis versi stabil dari golang yaitu 1.</description>
    </item>
    
    <item>
      <title>Menggunakan Vim Sebagai IDE Golang</title>
      <link>https://imamdigmi.github.io/post/menggunakan-vim-sebagai-ide-golang/</link>
      <pubDate>Sat, 14 Jan 2017 18:31:18 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/menggunakan-vim-sebagai-ide-golang/</guid>
      <description>Untuk menggunakan Vim (http://www.vim.org), ada plugin utama serta berbagai plugin pendukung yang bisa digunakan. Sebaiknya, menggunakan pathogen untuk mempermudah pengelolaan berbagai plugin tersebut. Bagian ini akan menjelaskan berbagai konfigurasi serta instalasi yang diperlukan sehingga Vim bisa menjadi peranti untuk pengembangan aplikasi menggunakan Go. Instalasi dan Konfigurasi Pathogen Pathogen adalah plugin dari Tim Pope yang digunakan untuk mempermudah pengelolaan plugin. Kode sumber dari Pathogen bisa diperoleh di vim-pathogen . Untuk instalasi, ikuti langkah berikut:</description>
    </item>
    
    <item>
      <title>Setup Docker on Ubuntu</title>
      <link>https://imamdigmi.github.io/post/setup-docker-on-ubuntu/</link>
      <pubDate>Sat, 14 Jan 2017 18:02:13 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/setup-docker-on-ubuntu/</guid>
      <description>Prerequisites To follow this tutorial, you will need the following:
 64-bit Ubuntu 16.04 Droplet Non-root user with sudo privileges Initial Setup Guide for Ubuntu 16.04 explains how to set this up.   Note: Docker requires a 64-bit version of Ubuntu as well as a kernel version equal to or greater than 3.10. The default 64-bit Ubuntu 16.04 Droplet meets these requirements.
 All the commands in this tutorial should be run as a non-root user.</description>
    </item>
    
    <item>
      <title>Menjadi Seorang Bapak</title>
      <link>https://imamdigmi.github.io/post/menjadi-seorang-bapak/</link>
      <pubDate>Sun, 14 Aug 2016 09:27:12 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/menjadi-seorang-bapak/</guid>
      <description> Dengan istri ku Ketika kita memasuki tahap perkenalan Sebuah ikatan yang indah Ketika istri ku mengandung anak ku Ketika istri ku melahirkan Diusia pertengahan kandungan Dengan anak ku Kamu dalam kandungan ibu mu Setelah kamu lahir Kamu berusia beberapa bulan Ketika kamu bisa merangkak Ketika kamu dapat berdiri Ketika kamu dapat berjalan Ketika kamu dapat berlari </description>
    </item>
    
    <item>
      <title>Graph Database Dengan Neo4j</title>
      <link>https://imamdigmi.github.io/post/graph-database-dengan-neo4j/</link>
      <pubDate>Fri, 03 Jun 2016 14:06:22 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/graph-database-dengan-neo4j/</guid>
      <description>Pada kesempatan kali ini kita akan membahas tentang Graph Database atau sering disebut dengan (GDBMS).
Apa itu Graph Database? Graph yang dimaksud pada graph database adalah definisi graph pada graph theory yang merupakan bagian dari ilmu matematika diskrit. Paper pertama yang membahas graph theory ditulis oleh Leonhard Eulear pada tahun 1736 yang membahas tentang permasalahan Konigsberg Bridge. Sebagai contoh, database relasional akan kewalahan melakukan query yang dibutuhkan untuk keperluan jejaring sosial seperti Facebook dan Twitter.</description>
    </item>
    
    <item>
      <title>Belajar Laravel - Anonymous Function/Lambda dan Closure</title>
      <link>https://imamdigmi.github.io/post/php-anonymous-function-lambda-dan-closure/</link>
      <pubDate>Thu, 26 May 2016 22:44:46 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/php-anonymous-function-lambda-dan-closure/</guid>
      <description>Pada artikel sebelumnya kita telah membahas tentang apa itu JSON. Nah kali ini kita akan membahas tentang Anonymous Function/Lambda dan Closure, Ukee mari kita bahas satu persatu dan kita mulai dari Anonymous Function atau Lambda.
Apa itu Anonymous Function/Lamda? Apakah anda pernah menonton film Hacker? mereka sering menyebutkan dirinya sebagai anonymous kan? tidak mau menyebutkan nama asli mereka kan? Nah, Anonymous Function/Lambda pun sama, mereka berdua tidak mau menyebutkan namanya tetapi tindakan dan perlakuannya sangat terasa oleh kita.</description>
    </item>
    
    <item>
      <title>Belajar Laravel - Json (JavaScript Object Notation)</title>
      <link>https://imamdigmi.github.io/post/php-json/</link>
      <pubDate>Thu, 26 May 2016 01:05:06 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/php-json/</guid>
      <description>Pada artikel sebelumnya kita telah membahas tentang konsep dasar OOP. Ukee Broo or Sist! saya yakin anda sudah tidak sabar untuk membahas tentang laravel, karena mungkin anda sudah tau mengapa anda memilih framework laravel untuk dipelajari yaitu framework yang sekarang banyak digunakan dan lagi terkenal. Tapi santai dulu, saya pengen agar anda bisa paham banget di laravel, makadari itu sengaja saya sisipkan konsep dasarnya dulu yaah agar anda tidak tersesat dalam proses pembelajaran ini.</description>
    </item>
    
    <item>
      <title>Belajar Laravel - Abstract dan Interface</title>
      <link>https://imamdigmi.github.io/post/php-abstract-dan-interface/</link>
      <pubDate>Wed, 25 May 2016 16:19:22 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/php-abstract-dan-interface/</guid>
      <description>Pada artikel sebelumnya kita telah membahas bagaimana membuat Class, Object, Property dan Meethod. Untuk mendalami framwork laravel sangat penting sekali bagi kita untuk memahami tentang Abstract dan Interface, jika Class adalah nasi dan gorengan tempe maka abstract dan interface adalah lalapan dan sambalnya, hmmm jadi inget masakan ibu 😅
Abstract Ukee, mari kita mulai dengan abstract. Sebenarnya apasih abstract itu?
Abstract adalah sebuah class yang tidak bisa &amp;ldquo;diinstansiasi&amp;rdquo; atau tidak bisa dijadikan object secara langsung (Wikipedia).</description>
    </item>
    
    <item>
      <title>Belajar Laravel - Class, Object, Property dan Method</title>
      <link>https://imamdigmi.github.io/post/php-class-object-property-dan-method/</link>
      <pubDate>Tue, 24 May 2016 15:41:07 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/php-class-object-property-dan-method/</guid>
      <description>Pada artikel sebelumnya kita telah membahas pengetian OOP dan bagaimana konsep dasar dari pendekatan OOP itu sendiri, nah sekarang mari kita praktekan bagaimana membuat Class, Object, Property dan Method.
Class Kita akan mulai dengan membuat Class terlebih dulu, Untuk membuat Class, penulisannya harus diawali dengan keyword class kemudian diikuti dengan nama Class, namun ada aturan penamaan dalam penulisan nama Class yaitu diawali dengan huruf kapital dan jika nama class tersebut lebih dari dua atau lebih maka kata selanjutnya disambung dan diawali dengan huruf kapital juga contohnya &amp;ldquo;KueDonat&amp;rdquo; penamaan seperti ini disebut dengan (Camel Case).</description>
    </item>
    
    <item>
      <title>Belajar Laravel - Pengertian OOP</title>
      <link>https://imamdigmi.github.io/post/php-pengertian-oop/</link>
      <pubDate>Tue, 24 May 2016 14:39:08 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/php-pengertian-oop/</guid>
      <description>Pada artikel sebelumnya kita telah membahas sedikit mengenai apa itu framework, namun sebelum kita mulai mendalami framework khususnya framework php yaitu laravel, kita perlu memahami tentang Pemrograman Berorientasi Obyek atau sering disebut OOP.
Note : Jika anda seorang pemula dalam pemrograman saya sarankan anda belajar dulu tentang OOP secara mendalam agar anda dapat dengan mudah menggunakan atau mendalami framework yang akan kita pelajari ini.
Apa itu OOP? (Object-oriented programming disingkat OOP) merupakan paradigma pemrograman yang berorientasikan kepada objek.</description>
    </item>
    
    <item>
      <title>Belajar Laravel - Pengenalan Framework</title>
      <link>https://imamdigmi.github.io/post/php-pengenalan-framework/</link>
      <pubDate>Tue, 24 May 2016 00:43:50 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/php-pengenalan-framework/</guid>
      <description>Apakah buku ini sudah selesai? Belum, Doakan saja semoga penulis sehat selalu agar buku ini dapat segera terselesaikan 😉 Okay, mari kita bahas dulu apa itu framework dan bagaiamana cara kerjanya.
Apa itu framework? Adalah suatu struktur konseptual dasar yang digunakan untuk memecahkan atau menangani suatu masalah kompleks. Istilah ini sering digunakan antara lain dalam bidang perangkat lunak untuk menggambarkan suatu desain sistem perangkat lunak yang dapat digunakan kembali, serta dalam bidang manajemen untuk menggambarkan suatu konsep yang memungkinkan penanganan berbagai jenis atau entitas bisnis secara homogen.</description>
    </item>
    
    <item>
      <title>Pulang Sekolah Menjelang Sore</title>
      <link>https://imamdigmi.github.io/post/pulang-sekolah-menjelang-sore/</link>
      <pubDate>Wed, 20 Apr 2016 17:44:20 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/pulang-sekolah-menjelang-sore/</guid>
      <description>Dalam rangka menghemat bahan bakar (halah bilang aja gapunya kendaraan) saya yang pulang sekolah dengan mengendarai sepatu butut cumpang-camping, tas merah, baju putih kotak-kotak celana jeans biru super kolot dengan menggenggam gulungan kertas hasil revisi naskah skripsi (maklum joki skripsi hehee) menikmati sore dengan berjalan kaki sambil berimajinasi dan merancang sebuah mimpi untuk membuat sesuatu yang bermanfaat bagi orang lain, sambil bergumam aku berkata “Stop, mari kita mulai lagi belajar menulis algoritma dan lupakan wanita yang berkeliaran dengan hot-pane dan rok pendek di beranda facebook, hahaa becanda” lalu menyusun rute jalan mana yang harus ditempuh untuk tahun depan setelah lulus sekolah nanti.</description>
    </item>
    
    <item>
      <title>Mengubah Paradigma</title>
      <link>https://imamdigmi.github.io/post/mengubah-paradigma/</link>
      <pubDate>Tue, 27 Jan 2015 00:10:17 +0700</pubDate>
      
      <guid>https://imamdigmi.github.io/post/mengubah-paradigma/</guid>
      <description>SUKSES ADALAH PILIHAN!
Al-jaddu bil-jiddi wal hirmanu bil-kasali fanshab tushib &amp;lsquo;an qariibin ghayatal-&amp;lsquo;amali.
Kesuksesan akan didapatkan dengan kesungguhan dan kegagalan terjadi akibat kemalasan. Bersungguh-sungguhlah maka kamu akan mendapatkan dengan segera apa yang kamu cita-citakan.
 Shulahuddin As-Supadi, wafat 764 H
 Kesusesan adalah kata yang menjadi harapan bagi semua orang. Hampir setiap di dunia ini berbuat sesuatu demi mencapai kesuksesan. Bahkan terkadang seseorang mengorbankan apapun untuk mencapai kesuksesan yang ia idam-idamkan.</description>
    </item>
    
  </channel>
</rss>